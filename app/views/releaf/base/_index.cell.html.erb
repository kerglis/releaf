<%
  # TODO: refactor to lib class
  name_parts = name.split(".")
  value_resource = resource
  name_parts[0..-2].each do|part|
    value_resource = value_resource.send(part)
  end
  name = name_parts.last
  text = value_resource.send(name)


  if name =~ /_id$/
    if value_resource.class.respond_to?(:reflect_on_association)
      # FIXME what if association was set with :foreign_key option
      rel_name = name.to_s.sub(/_id$/, '').to_sym
      if value_resource.class.reflect_on_association(rel_name)
        text = resource_to_text(value_resource.send(rel_name))
      end
    end
  elsif name =~ /(thumbnail|image|photo|picture|avatar|logo|icon)_uid$/
    unless value_resource.send(name).blank?
      text = image_tag value_resource.send(name.to_s.sub(/_uid$/, '')).thumb('x16').url, :alt => ''
    else
      text = ""
    end
  elsif text.is_a? TrueClass or text.is_a? FalseClass
    text = t(text ? 'yes' : 'no', :scope => 'admin.global')
  elsif text.is_a? Time
    text = I18n.l(text, :format => :default)
  end
%>
<td>
  <% if @features[:edit] %>
  <a href="<%= url_for( action: :edit, id: resource.id, index_url: index_url ) %>"><span><%= text %></span></a>
  <% else %>
  <span><%= text %></span>
  <% end %>
</td>
